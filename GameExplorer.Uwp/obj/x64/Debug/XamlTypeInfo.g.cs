//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace GameExplorer.Uwp
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlMetaDataProvider __appProvider;
        private global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlMetaDataProvider _AppProvider
        {
            get
            {
                if (__appProvider == null)
                {
                    __appProvider = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlMetaDataProvider();
                }
                return __appProvider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return _AppProvider.GetXamlType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return _AppProvider.GetXamlType(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return _AppProvider.GetXmlnsDefinitions();
        }
    }
}

namespace GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo
{
    /// <summary>
    /// Main class for providing metadata for the app or library
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class XamlMetaDataProvider : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlTypeInfoProvider _provider = null;

        private global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlTypeInfoProvider Provider
        {
            get
            {
                if (_provider == null)
                {
                    _provider = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlTypeInfoProvider();
                }
                return _provider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return Provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return Provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[52];
            _typeNameTable[0] = "GameExplorer.Uwp.Dialogs.ColorPickerDialog";
            _typeNameTable[1] = "Windows.UI.Xaml.Controls.ContentDialog";
            _typeNameTable[2] = "Windows.UI.Xaml.Controls.ContentControl";
            _typeNameTable[3] = "Boolean";
            _typeNameTable[4] = "Windows.UI.Color";
            _typeNameTable[5] = "System.ValueType";
            _typeNameTable[6] = "Object";
            _typeNameTable[7] = "GameExplorer.Uwp.Dialogs.CreateQuestLineDialog";
            _typeNameTable[8] = "GameExplorer.Model.Questline";
            _typeNameTable[9] = "GameExplorer.Model.DatabaseItem";
            _typeNameTable[10] = "GameExplorer.Model.NotifyPropertyChanged";
            _typeNameTable[11] = "GameExplorer.Uwp.Converters.VisibillityConverter";
            _typeNameTable[12] = "GameExplorer.Uwp.Converters.ImageConverter";
            _typeNameTable[13] = "GameExplorer.Uwp.RichEditBoxExtended";
            _typeNameTable[14] = "Windows.UI.Xaml.Controls.RichEditBox";
            _typeNameTable[15] = "String";
            _typeNameTable[16] = "GameExplorer.Uwp.Dialogs.AddStepDialog";
            _typeNameTable[17] = "GameExplorer.Model.Step";
            _typeNameTable[18] = "GameExplorer.Uwp.Dialogs.AddVideoDialog";
            _typeNameTable[19] = "GameExplorer.Model.Video";
            _typeNameTable[20] = "GameExplorer.Uwp.Dialogs.CreateRewardDialog";
            _typeNameTable[21] = "GameExplorer.Model.Reward";
            _typeNameTable[22] = "GameExplorer.Uwp.Dialogs.ReportDialog";
            _typeNameTable[23] = "GameExplorer.Uwp.Dialogs.SignInDialog";
            _typeNameTable[24] = "GameExplorer.Uwp.ViewModels.SignInViewModel";
            _typeNameTable[25] = "GameExplorer.Uwp.ViewModels.BaseViewModel";
            _typeNameTable[26] = "GameExplorer.Uwp.Converters.DateTimeConverter";
            _typeNameTable[27] = "GameExplorer.Uwp.Converters.ColorConverter";
            _typeNameTable[28] = "GameExplorer.Uwp.Views.AccountSettingsPage";
            _typeNameTable[29] = "Windows.UI.Xaml.Controls.Page";
            _typeNameTable[30] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[31] = "GameExplorer.Uwp.Views.AddGamePage";
            _typeNameTable[32] = "GameExplorer.Uwp.Views.AddQuestPage";
            _typeNameTable[33] = "GameExplorer.Uwp.Views.AddWikiPage";
            _typeNameTable[34] = "GameExplorer.Uwp.Views.GamePage";
            _typeNameTable[35] = "GameExplorer.Uwp.Views.HomePage";
            _typeNameTable[36] = "GameExplorer.Uwp.ViewModels.HomeViewModel";
            _typeNameTable[37] = "GameExplorer.Uwp.Converters.InvertedVisibillityConverter";
            _typeNameTable[38] = "GameExplorer.Uwp.Views.MainPage";
            _typeNameTable[39] = "Windows.UI.Xaml.Controls.Frame";
            _typeNameTable[40] = "GameExplorer.Uwp.Services.DatabaseService";
            _typeNameTable[41] = "GameExplorer.Uwp.ViewModels.MainPageViewModel";
            _typeNameTable[42] = "GameExplorer.Uwp.Views.MediaPage";
            _typeNameTable[43] = "GameExplorer.Uwp.Views.QuestPage";
            _typeNameTable[44] = "GameExplorer.Uwp.Views.SearchPage";
            _typeNameTable[45] = "GameExplorer.Uwp.Views.SettingsPage";
            _typeNameTable[46] = "GameExplorer.Uwp.Views.UserActivityPage";
            _typeNameTable[47] = "GameExplorer.Uwp.Views.UserFriendsPage";
            _typeNameTable[48] = "GameExplorer.Uwp.Views.UserGamesPage";
            _typeNameTable[49] = "GameExplorer.Uwp.Converters.ExperienceConverter";
            _typeNameTable[50] = "GameExplorer.Uwp.Views.UserPage";
            _typeNameTable[51] = "GameExplorer.Uwp.Views.WikiPage";

            _typeTable = new global::System.Type[52];
            _typeTable[0] = typeof(global::GameExplorer.Uwp.Dialogs.ColorPickerDialog);
            _typeTable[1] = typeof(global::Windows.UI.Xaml.Controls.ContentDialog);
            _typeTable[2] = typeof(global::Windows.UI.Xaml.Controls.ContentControl);
            _typeTable[3] = typeof(global::System.Boolean);
            _typeTable[4] = typeof(global::Windows.UI.Color);
            _typeTable[5] = typeof(global::System.ValueType);
            _typeTable[6] = typeof(global::System.Object);
            _typeTable[7] = typeof(global::GameExplorer.Uwp.Dialogs.CreateQuestLineDialog);
            _typeTable[8] = typeof(global::GameExplorer.Model.Questline);
            _typeTable[9] = typeof(global::GameExplorer.Model.DatabaseItem);
            _typeTable[10] = typeof(global::GameExplorer.Model.NotifyPropertyChanged);
            _typeTable[11] = typeof(global::GameExplorer.Uwp.Converters.VisibillityConverter);
            _typeTable[12] = typeof(global::GameExplorer.Uwp.Converters.ImageConverter);
            _typeTable[13] = typeof(global::GameExplorer.Uwp.RichEditBoxExtended);
            _typeTable[14] = typeof(global::Windows.UI.Xaml.Controls.RichEditBox);
            _typeTable[15] = typeof(global::System.String);
            _typeTable[16] = typeof(global::GameExplorer.Uwp.Dialogs.AddStepDialog);
            _typeTable[17] = typeof(global::GameExplorer.Model.Step);
            _typeTable[18] = typeof(global::GameExplorer.Uwp.Dialogs.AddVideoDialog);
            _typeTable[19] = typeof(global::GameExplorer.Model.Video);
            _typeTable[20] = typeof(global::GameExplorer.Uwp.Dialogs.CreateRewardDialog);
            _typeTable[21] = typeof(global::GameExplorer.Model.Reward);
            _typeTable[22] = typeof(global::GameExplorer.Uwp.Dialogs.ReportDialog);
            _typeTable[23] = typeof(global::GameExplorer.Uwp.Dialogs.SignInDialog);
            _typeTable[24] = typeof(global::GameExplorer.Uwp.ViewModels.SignInViewModel);
            _typeTable[25] = typeof(global::GameExplorer.Uwp.ViewModels.BaseViewModel);
            _typeTable[26] = typeof(global::GameExplorer.Uwp.Converters.DateTimeConverter);
            _typeTable[27] = typeof(global::GameExplorer.Uwp.Converters.ColorConverter);
            _typeTable[28] = typeof(global::GameExplorer.Uwp.Views.AccountSettingsPage);
            _typeTable[29] = typeof(global::Windows.UI.Xaml.Controls.Page);
            _typeTable[30] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[31] = typeof(global::GameExplorer.Uwp.Views.AddGamePage);
            _typeTable[32] = typeof(global::GameExplorer.Uwp.Views.AddQuestPage);
            _typeTable[33] = typeof(global::GameExplorer.Uwp.Views.AddWikiPage);
            _typeTable[34] = typeof(global::GameExplorer.Uwp.Views.GamePage);
            _typeTable[35] = typeof(global::GameExplorer.Uwp.Views.HomePage);
            _typeTable[36] = typeof(global::GameExplorer.Uwp.ViewModels.HomeViewModel);
            _typeTable[37] = typeof(global::GameExplorer.Uwp.Converters.InvertedVisibillityConverter);
            _typeTable[38] = typeof(global::GameExplorer.Uwp.Views.MainPage);
            _typeTable[39] = typeof(global::Windows.UI.Xaml.Controls.Frame);
            _typeTable[40] = typeof(global::GameExplorer.Uwp.Services.DatabaseService);
            _typeTable[41] = typeof(global::GameExplorer.Uwp.ViewModels.MainPageViewModel);
            _typeTable[42] = typeof(global::GameExplorer.Uwp.Views.MediaPage);
            _typeTable[43] = typeof(global::GameExplorer.Uwp.Views.QuestPage);
            _typeTable[44] = typeof(global::GameExplorer.Uwp.Views.SearchPage);
            _typeTable[45] = typeof(global::GameExplorer.Uwp.Views.SettingsPage);
            _typeTable[46] = typeof(global::GameExplorer.Uwp.Views.UserActivityPage);
            _typeTable[47] = typeof(global::GameExplorer.Uwp.Views.UserFriendsPage);
            _typeTable[48] = typeof(global::GameExplorer.Uwp.Views.UserGamesPage);
            _typeTable[49] = typeof(global::GameExplorer.Uwp.Converters.ExperienceConverter);
            _typeTable[50] = typeof(global::GameExplorer.Uwp.Views.UserPage);
            _typeTable[51] = typeof(global::GameExplorer.Uwp.Views.WikiPage);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_7_CreateQuestLineDialog() { return new global::GameExplorer.Uwp.Dialogs.CreateQuestLineDialog(); }
        private object Activate_8_Questline() { return new global::GameExplorer.Model.Questline(); }
        private object Activate_9_DatabaseItem() { return new global::GameExplorer.Model.DatabaseItem(); }
        private object Activate_11_VisibillityConverter() { return new global::GameExplorer.Uwp.Converters.VisibillityConverter(); }
        private object Activate_12_ImageConverter() { return new global::GameExplorer.Uwp.Converters.ImageConverter(); }
        private object Activate_13_RichEditBoxExtended() { return new global::GameExplorer.Uwp.RichEditBoxExtended(); }
        private object Activate_16_AddStepDialog() { return new global::GameExplorer.Uwp.Dialogs.AddStepDialog(); }
        private object Activate_17_Step() { return new global::GameExplorer.Model.Step(); }
        private object Activate_18_AddVideoDialog() { return new global::GameExplorer.Uwp.Dialogs.AddVideoDialog(); }
        private object Activate_19_Video() { return new global::GameExplorer.Model.Video(); }
        private object Activate_20_CreateRewardDialog() { return new global::GameExplorer.Uwp.Dialogs.CreateRewardDialog(); }
        private object Activate_21_Reward() { return new global::GameExplorer.Model.Reward(); }
        private object Activate_23_SignInDialog() { return new global::GameExplorer.Uwp.Dialogs.SignInDialog(); }
        private object Activate_24_SignInViewModel() { return new global::GameExplorer.Uwp.ViewModels.SignInViewModel(); }
        private object Activate_26_DateTimeConverter() { return new global::GameExplorer.Uwp.Converters.DateTimeConverter(); }
        private object Activate_27_ColorConverter() { return new global::GameExplorer.Uwp.Converters.ColorConverter(); }
        private object Activate_28_AccountSettingsPage() { return new global::GameExplorer.Uwp.Views.AccountSettingsPage(); }
        private object Activate_31_AddGamePage() { return new global::GameExplorer.Uwp.Views.AddGamePage(); }
        private object Activate_32_AddQuestPage() { return new global::GameExplorer.Uwp.Views.AddQuestPage(); }
        private object Activate_33_AddWikiPage() { return new global::GameExplorer.Uwp.Views.AddWikiPage(); }
        private object Activate_34_GamePage() { return new global::GameExplorer.Uwp.Views.GamePage(); }
        private object Activate_35_HomePage() { return new global::GameExplorer.Uwp.Views.HomePage(); }
        private object Activate_36_HomeViewModel() { return new global::GameExplorer.Uwp.ViewModels.HomeViewModel(); }
        private object Activate_37_InvertedVisibillityConverter() { return new global::GameExplorer.Uwp.Converters.InvertedVisibillityConverter(); }
        private object Activate_38_MainPage() { return new global::GameExplorer.Uwp.Views.MainPage(); }
        private object Activate_40_DatabaseService() { return new global::GameExplorer.Uwp.Services.DatabaseService(); }
        private object Activate_41_MainPageViewModel() { return new global::GameExplorer.Uwp.ViewModels.MainPageViewModel(); }
        private object Activate_42_MediaPage() { return new global::GameExplorer.Uwp.Views.MediaPage(); }
        private object Activate_43_QuestPage() { return new global::GameExplorer.Uwp.Views.QuestPage(); }
        private object Activate_44_SearchPage() { return new global::GameExplorer.Uwp.Views.SearchPage(); }
        private object Activate_45_SettingsPage() { return new global::GameExplorer.Uwp.Views.SettingsPage(); }
        private object Activate_46_UserActivityPage() { return new global::GameExplorer.Uwp.Views.UserActivityPage(); }
        private object Activate_47_UserFriendsPage() { return new global::GameExplorer.Uwp.Views.UserFriendsPage(); }
        private object Activate_48_UserGamesPage() { return new global::GameExplorer.Uwp.Views.UserGamesPage(); }
        private object Activate_49_ExperienceConverter() { return new global::GameExplorer.Uwp.Converters.ExperienceConverter(); }
        private object Activate_50_UserPage() { return new global::GameExplorer.Uwp.Views.UserPage(); }
        private object Activate_51_WikiPage() { return new global::GameExplorer.Uwp.Views.WikiPage(); }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  GameExplorer.Uwp.Dialogs.ColorPickerDialog
                userType = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.ContentDialog"));
                userType.AddMemberName("Alpha");
                userType.AddMemberName("Color");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 1:   //  Windows.UI.Xaml.Controls.ContentDialog
                xamlType = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  Windows.UI.Xaml.Controls.ContentControl
                xamlType = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 3:   //  Boolean
                xamlType = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 4:   //  Windows.UI.Color
                userType = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 5:   //  System.ValueType
                userType = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 6:   //  Object
                xamlType = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 7:   //  GameExplorer.Uwp.Dialogs.CreateQuestLineDialog
                userType = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.ContentDialog"));
                userType.Activator = Activate_7_CreateQuestLineDialog;
                userType.AddMemberName("Questline");
                userType.AddMemberName("ValidResult");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 8:   //  GameExplorer.Model.Questline
                userType = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GameExplorer.Model.DatabaseItem"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 9:   //  GameExplorer.Model.DatabaseItem
                userType = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GameExplorer.Model.NotifyPropertyChanged"));
                userType.Activator = Activate_9_DatabaseItem;
                xamlType = userType;
                break;

            case 10:   //  GameExplorer.Model.NotifyPropertyChanged
                userType = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 11:   //  GameExplorer.Uwp.Converters.VisibillityConverter
                userType = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_11_VisibillityConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 12:   //  GameExplorer.Uwp.Converters.ImageConverter
                userType = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_12_ImageConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 13:   //  GameExplorer.Uwp.RichEditBoxExtended
                userType = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.RichEditBox"));
                userType.Activator = Activate_13_RichEditBoxExtended;
                userType.AddMemberName("Editable");
                userType.AddMemberName("RtfText");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 14:   //  Windows.UI.Xaml.Controls.RichEditBox
                xamlType = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 15:   //  String
                xamlType = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 16:   //  GameExplorer.Uwp.Dialogs.AddStepDialog
                userType = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.ContentDialog"));
                userType.Activator = Activate_16_AddStepDialog;
                userType.AddMemberName("StepData");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 17:   //  GameExplorer.Model.Step
                userType = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GameExplorer.Model.DatabaseItem"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 18:   //  GameExplorer.Uwp.Dialogs.AddVideoDialog
                userType = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.ContentDialog"));
                userType.Activator = Activate_18_AddVideoDialog;
                userType.AddMemberName("VideoData");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 19:   //  GameExplorer.Model.Video
                userType = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GameExplorer.Model.DatabaseItem"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 20:   //  GameExplorer.Uwp.Dialogs.CreateRewardDialog
                userType = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.ContentDialog"));
                userType.Activator = Activate_20_CreateRewardDialog;
                userType.AddMemberName("Reward");
                userType.AddMemberName("ValidResult");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 21:   //  GameExplorer.Model.Reward
                userType = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GameExplorer.Model.DatabaseItem"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 22:   //  GameExplorer.Uwp.Dialogs.ReportDialog
                userType = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.ContentDialog"));
                userType.AddMemberName("Message");
                userType.AddMemberName("Valid");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 23:   //  GameExplorer.Uwp.Dialogs.SignInDialog
                userType = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.ContentDialog"));
                userType.Activator = Activate_23_SignInDialog;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 24:   //  GameExplorer.Uwp.ViewModels.SignInViewModel
                userType = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GameExplorer.Uwp.ViewModels.BaseViewModel"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 25:   //  GameExplorer.Uwp.ViewModels.BaseViewModel
                userType = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 26:   //  GameExplorer.Uwp.Converters.DateTimeConverter
                userType = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_26_DateTimeConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 27:   //  GameExplorer.Uwp.Converters.ColorConverter
                userType = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_27_ColorConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 28:   //  GameExplorer.Uwp.Views.AccountSettingsPage
                userType = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_28_AccountSettingsPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 29:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 30:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 31:   //  GameExplorer.Uwp.Views.AddGamePage
                userType = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_31_AddGamePage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 32:   //  GameExplorer.Uwp.Views.AddQuestPage
                userType = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_32_AddQuestPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 33:   //  GameExplorer.Uwp.Views.AddWikiPage
                userType = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_33_AddWikiPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 34:   //  GameExplorer.Uwp.Views.GamePage
                userType = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_34_GamePage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 35:   //  GameExplorer.Uwp.Views.HomePage
                userType = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_35_HomePage;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 36:   //  GameExplorer.Uwp.ViewModels.HomeViewModel
                userType = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GameExplorer.Uwp.ViewModels.BaseViewModel"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 37:   //  GameExplorer.Uwp.Converters.InvertedVisibillityConverter
                userType = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_37_InvertedVisibillityConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 38:   //  GameExplorer.Uwp.Views.MainPage
                userType = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_38_MainPage;
                userType.AddMemberName("NavigationFrame");
                userType.AddMemberName("Database");
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 39:   //  Windows.UI.Xaml.Controls.Frame
                xamlType = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 40:   //  GameExplorer.Uwp.Services.DatabaseService
                userType = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 41:   //  GameExplorer.Uwp.ViewModels.MainPageViewModel
                userType = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GameExplorer.Uwp.ViewModels.BaseViewModel"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 42:   //  GameExplorer.Uwp.Views.MediaPage
                userType = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_42_MediaPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 43:   //  GameExplorer.Uwp.Views.QuestPage
                userType = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_43_QuestPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 44:   //  GameExplorer.Uwp.Views.SearchPage
                userType = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_44_SearchPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 45:   //  GameExplorer.Uwp.Views.SettingsPage
                userType = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_45_SettingsPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 46:   //  GameExplorer.Uwp.Views.UserActivityPage
                userType = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_46_UserActivityPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 47:   //  GameExplorer.Uwp.Views.UserFriendsPage
                userType = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_47_UserFriendsPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 48:   //  GameExplorer.Uwp.Views.UserGamesPage
                userType = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_48_UserGamesPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 49:   //  GameExplorer.Uwp.Converters.ExperienceConverter
                userType = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_49_ExperienceConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 50:   //  GameExplorer.Uwp.Views.UserPage
                userType = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_50_UserPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 51:   //  GameExplorer.Uwp.Views.WikiPage
                userType = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_51_WikiPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;
            }
            return xamlType;
        }


        private object get_0_ColorPickerDialog_Alpha(object instance)
        {
            var that = (global::GameExplorer.Uwp.Dialogs.ColorPickerDialog)instance;
            return that.Alpha;
        }
        private object get_1_ColorPickerDialog_Color(object instance)
        {
            var that = (global::GameExplorer.Uwp.Dialogs.ColorPickerDialog)instance;
            return that.Color;
        }
        private void set_1_ColorPickerDialog_Color(object instance, object Value)
        {
            var that = (global::GameExplorer.Uwp.Dialogs.ColorPickerDialog)instance;
            that.Color = (global::Windows.UI.Color)Value;
        }
        private object get_2_CreateQuestLineDialog_Questline(object instance)
        {
            var that = (global::GameExplorer.Uwp.Dialogs.CreateQuestLineDialog)instance;
            return that.Questline;
        }
        private object get_3_CreateQuestLineDialog_ValidResult(object instance)
        {
            var that = (global::GameExplorer.Uwp.Dialogs.CreateQuestLineDialog)instance;
            return that.ValidResult;
        }
        private object get_4_RichEditBoxExtended_Editable(object instance)
        {
            var that = (global::GameExplorer.Uwp.RichEditBoxExtended)instance;
            return that.Editable;
        }
        private void set_4_RichEditBoxExtended_Editable(object instance, object Value)
        {
            var that = (global::GameExplorer.Uwp.RichEditBoxExtended)instance;
            that.Editable = (global::System.Boolean)Value;
        }
        private object get_5_RichEditBoxExtended_RtfText(object instance)
        {
            var that = (global::GameExplorer.Uwp.RichEditBoxExtended)instance;
            return that.RtfText;
        }
        private void set_5_RichEditBoxExtended_RtfText(object instance, object Value)
        {
            var that = (global::GameExplorer.Uwp.RichEditBoxExtended)instance;
            that.RtfText = (global::System.String)Value;
        }
        private object get_6_AddStepDialog_StepData(object instance)
        {
            var that = (global::GameExplorer.Uwp.Dialogs.AddStepDialog)instance;
            return that.StepData;
        }
        private object get_7_AddVideoDialog_VideoData(object instance)
        {
            var that = (global::GameExplorer.Uwp.Dialogs.AddVideoDialog)instance;
            return that.VideoData;
        }
        private object get_8_CreateRewardDialog_Reward(object instance)
        {
            var that = (global::GameExplorer.Uwp.Dialogs.CreateRewardDialog)instance;
            return that.Reward;
        }
        private object get_9_CreateRewardDialog_ValidResult(object instance)
        {
            var that = (global::GameExplorer.Uwp.Dialogs.CreateRewardDialog)instance;
            return that.ValidResult;
        }
        private object get_10_ReportDialog_Message(object instance)
        {
            var that = (global::GameExplorer.Uwp.Dialogs.ReportDialog)instance;
            return that.Message;
        }
        private void set_10_ReportDialog_Message(object instance, object Value)
        {
            var that = (global::GameExplorer.Uwp.Dialogs.ReportDialog)instance;
            that.Message = (global::System.String)Value;
        }
        private object get_11_ReportDialog_Valid(object instance)
        {
            var that = (global::GameExplorer.Uwp.Dialogs.ReportDialog)instance;
            return that.Valid;
        }
        private object get_12_SignInDialog_ViewModel(object instance)
        {
            var that = (global::GameExplorer.Uwp.Dialogs.SignInDialog)instance;
            return that.ViewModel;
        }
        private void set_12_SignInDialog_ViewModel(object instance, object Value)
        {
            var that = (global::GameExplorer.Uwp.Dialogs.SignInDialog)instance;
            that.ViewModel = (global::GameExplorer.Uwp.ViewModels.SignInViewModel)Value;
        }
        private object get_13_HomePage_ViewModel(object instance)
        {
            var that = (global::GameExplorer.Uwp.Views.HomePage)instance;
            return that.ViewModel;
        }
        private void set_13_HomePage_ViewModel(object instance, object Value)
        {
            var that = (global::GameExplorer.Uwp.Views.HomePage)instance;
            that.ViewModel = (global::GameExplorer.Uwp.ViewModels.HomeViewModel)Value;
        }
        private object get_14_MainPage_NavigationFrame(object instance)
        {
            var that = (global::GameExplorer.Uwp.Views.MainPage)instance;
            return that.NavigationFrame;
        }
        private object get_15_MainPage_Database(object instance)
        {
            var that = (global::GameExplorer.Uwp.Views.MainPage)instance;
            return that.Database;
        }
        private void set_15_MainPage_Database(object instance, object Value)
        {
            var that = (global::GameExplorer.Uwp.Views.MainPage)instance;
            that.Database = (global::GameExplorer.Uwp.Services.DatabaseService)Value;
        }
        private object get_16_MainPage_ViewModel(object instance)
        {
            var that = (global::GameExplorer.Uwp.Views.MainPage)instance;
            return that.ViewModel;
        }
        private void set_16_MainPage_ViewModel(object instance, object Value)
        {
            var that = (global::GameExplorer.Uwp.Views.MainPage)instance;
            that.ViewModel = (global::GameExplorer.Uwp.ViewModels.MainPageViewModel)Value;
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlMember xamlMember = null;
            global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "GameExplorer.Uwp.Dialogs.ColorPickerDialog.Alpha":
                userType = (global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameExplorer.Uwp.Dialogs.ColorPickerDialog");
                xamlMember = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlMember(this, "Alpha", "Boolean");
                xamlMember.Getter = get_0_ColorPickerDialog_Alpha;
                xamlMember.SetIsReadOnly();
                break;
            case "GameExplorer.Uwp.Dialogs.ColorPickerDialog.Color":
                userType = (global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameExplorer.Uwp.Dialogs.ColorPickerDialog");
                xamlMember = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlMember(this, "Color", "Windows.UI.Color");
                xamlMember.Getter = get_1_ColorPickerDialog_Color;
                xamlMember.Setter = set_1_ColorPickerDialog_Color;
                break;
            case "GameExplorer.Uwp.Dialogs.CreateQuestLineDialog.Questline":
                userType = (global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameExplorer.Uwp.Dialogs.CreateQuestLineDialog");
                xamlMember = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlMember(this, "Questline", "GameExplorer.Model.Questline");
                xamlMember.Getter = get_2_CreateQuestLineDialog_Questline;
                xamlMember.SetIsReadOnly();
                break;
            case "GameExplorer.Uwp.Dialogs.CreateQuestLineDialog.ValidResult":
                userType = (global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameExplorer.Uwp.Dialogs.CreateQuestLineDialog");
                xamlMember = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlMember(this, "ValidResult", "Boolean");
                xamlMember.Getter = get_3_CreateQuestLineDialog_ValidResult;
                xamlMember.SetIsReadOnly();
                break;
            case "GameExplorer.Uwp.RichEditBoxExtended.Editable":
                userType = (global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameExplorer.Uwp.RichEditBoxExtended");
                xamlMember = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlMember(this, "Editable", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_4_RichEditBoxExtended_Editable;
                xamlMember.Setter = set_4_RichEditBoxExtended_Editable;
                break;
            case "GameExplorer.Uwp.RichEditBoxExtended.RtfText":
                userType = (global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameExplorer.Uwp.RichEditBoxExtended");
                xamlMember = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlMember(this, "RtfText", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_5_RichEditBoxExtended_RtfText;
                xamlMember.Setter = set_5_RichEditBoxExtended_RtfText;
                break;
            case "GameExplorer.Uwp.Dialogs.AddStepDialog.StepData":
                userType = (global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameExplorer.Uwp.Dialogs.AddStepDialog");
                xamlMember = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlMember(this, "StepData", "GameExplorer.Model.Step");
                xamlMember.Getter = get_6_AddStepDialog_StepData;
                xamlMember.SetIsReadOnly();
                break;
            case "GameExplorer.Uwp.Dialogs.AddVideoDialog.VideoData":
                userType = (global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameExplorer.Uwp.Dialogs.AddVideoDialog");
                xamlMember = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlMember(this, "VideoData", "GameExplorer.Model.Video");
                xamlMember.Getter = get_7_AddVideoDialog_VideoData;
                xamlMember.SetIsReadOnly();
                break;
            case "GameExplorer.Uwp.Dialogs.CreateRewardDialog.Reward":
                userType = (global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameExplorer.Uwp.Dialogs.CreateRewardDialog");
                xamlMember = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlMember(this, "Reward", "GameExplorer.Model.Reward");
                xamlMember.Getter = get_8_CreateRewardDialog_Reward;
                xamlMember.SetIsReadOnly();
                break;
            case "GameExplorer.Uwp.Dialogs.CreateRewardDialog.ValidResult":
                userType = (global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameExplorer.Uwp.Dialogs.CreateRewardDialog");
                xamlMember = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlMember(this, "ValidResult", "Boolean");
                xamlMember.Getter = get_9_CreateRewardDialog_ValidResult;
                xamlMember.SetIsReadOnly();
                break;
            case "GameExplorer.Uwp.Dialogs.ReportDialog.Message":
                userType = (global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameExplorer.Uwp.Dialogs.ReportDialog");
                xamlMember = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlMember(this, "Message", "String");
                xamlMember.Getter = get_10_ReportDialog_Message;
                xamlMember.Setter = set_10_ReportDialog_Message;
                break;
            case "GameExplorer.Uwp.Dialogs.ReportDialog.Valid":
                userType = (global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameExplorer.Uwp.Dialogs.ReportDialog");
                xamlMember = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlMember(this, "Valid", "Boolean");
                xamlMember.Getter = get_11_ReportDialog_Valid;
                xamlMember.SetIsReadOnly();
                break;
            case "GameExplorer.Uwp.Dialogs.SignInDialog.ViewModel":
                userType = (global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameExplorer.Uwp.Dialogs.SignInDialog");
                xamlMember = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlMember(this, "ViewModel", "GameExplorer.Uwp.ViewModels.SignInViewModel");
                xamlMember.Getter = get_12_SignInDialog_ViewModel;
                xamlMember.Setter = set_12_SignInDialog_ViewModel;
                break;
            case "GameExplorer.Uwp.Views.HomePage.ViewModel":
                userType = (global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameExplorer.Uwp.Views.HomePage");
                xamlMember = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlMember(this, "ViewModel", "GameExplorer.Uwp.ViewModels.HomeViewModel");
                xamlMember.Getter = get_13_HomePage_ViewModel;
                xamlMember.Setter = set_13_HomePage_ViewModel;
                break;
            case "GameExplorer.Uwp.Views.MainPage.NavigationFrame":
                userType = (global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameExplorer.Uwp.Views.MainPage");
                xamlMember = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlMember(this, "NavigationFrame", "Windows.UI.Xaml.Controls.Frame");
                xamlMember.Getter = get_14_MainPage_NavigationFrame;
                xamlMember.SetIsReadOnly();
                break;
            case "GameExplorer.Uwp.Views.MainPage.Database":
                userType = (global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameExplorer.Uwp.Views.MainPage");
                xamlMember = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlMember(this, "Database", "GameExplorer.Uwp.Services.DatabaseService");
                xamlMember.Getter = get_15_MainPage_Database;
                xamlMember.Setter = set_15_MainPage_Database;
                break;
            case "GameExplorer.Uwp.Views.MainPage.ViewModel":
                userType = (global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GameExplorer.Uwp.Views.MainPage");
                xamlMember = new global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlMember(this, "ViewModel", "GameExplorer.Uwp.ViewModels.MainPageViewModel");
                xamlMember.Getter = get_16_MainPage_ViewModel;
                xamlMember.Setter = set_16_MainPage_ViewModel;
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);
    internal delegate object CreateFromStringMethod(string args);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlSystemBaseType
    {
        global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (CreateFromStringMethod != null)
            {
                return this.CreateFromStringMethod(input);
            }
            else if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }
        public CreateFromStringMethod CreateFromStringMethod {get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::GameExplorer.Uwp.GameExplorer_Uwp_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

