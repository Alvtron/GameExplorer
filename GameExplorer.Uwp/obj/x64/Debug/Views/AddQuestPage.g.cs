#pragma checksum "C:\Users\thoma\source\repos\Game Explorer\Game Explorer\GameExplorer.Uwp\Views\AddQuestPage.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "5029D52E8D59B7DB30EAC56C50A342D9"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GameExplorer.Uwp.Views
{
    partial class AddQuestPage : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_FrameworkElement_DataContext(global::Windows.UI.Xaml.FrameworkElement obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.DataContext = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Control_IsEnabled(global::Windows.UI.Xaml.Controls.Control obj, global::System.Boolean value)
            {
                obj.IsEnabled = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_ProgressRing_IsActive(global::Windows.UI.Xaml.Controls.ProgressRing obj, global::System.Boolean value)
            {
                obj.IsActive = value;
            }
            public static void Set_Windows_UI_Xaml_UIElement_Visibility(global::Windows.UI.Xaml.UIElement obj, global::Windows.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(global::Windows.UI.Xaml.Controls.Primitives.ButtonBase obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.Command = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Windows.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_CommandParameter(global::Windows.UI.Xaml.Controls.Primitives.ButtonBase obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.CommandParameter = value;
            }
            public static void Set_GameExplorer_Uwp_RichEditBoxExtended_RtfText(global::GameExplorer.Uwp.RichEditBoxExtended obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.RtfText = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBox_Text(global::Windows.UI.Xaml.Controls.TextBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_Image_Source(global::Windows.UI.Xaml.Controls.Image obj, global::Windows.UI.Xaml.Media.ImageSource value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.ImageSource) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.ImageSource), targetNullValue);
                }
                obj.Source = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_WebView_Source(global::Windows.UI.Xaml.Controls.WebView obj, global::System.Uri value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Uri) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Uri), targetNullValue);
                }
                obj.Source = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class AddQuestPage_obj8_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IAddQuestPage_Bindings
        {
            private global::GameExplorer.Model.Video dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj8;
            private global::Windows.UI.Xaml.Controls.WebView obj9;

            private AddQuestPage_obj8_BindingsTracking bindingsTracking;

            public AddQuestPage_obj8_Bindings()
            {
                this.bindingsTracking = new AddQuestPage_obj8_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 8: // Views\AddQuestPage.xaml line 128
                        this.obj8 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.RelativePanel)target);
                        break;
                    case 9: // Views\AddQuestPage.xaml line 130
                        this.obj9 = (global::Windows.UI.Xaml.Controls.WebView)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj8.Target as global::Windows.UI.Xaml.Controls.RelativePanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::GameExplorer.Model.Video) item, 1 << phase);
            }

            public void Recycle()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // IAddQuestPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::GameExplorer.Model.Video)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::GameExplorer.Model.Video obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_YouTubeUri(obj.YouTubeUri, phase);
                    }
                }
            }
            private void Update_YouTubeUri(global::System.Uri obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AddQuestPage.xaml line 130
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_WebView_Source(this.obj9, obj, null);
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class AddQuestPage_obj8_BindingsTracking
            {
                private global::System.WeakReference<AddQuestPage_obj8_Bindings> weakRefToBindingObj; 

                public AddQuestPage_obj8_BindingsTracking(AddQuestPage_obj8_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<AddQuestPage_obj8_Bindings>(obj);
                }

                public AddQuestPage_obj8_Bindings TryGetBindingObject()
                {
                    AddQuestPage_obj8_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AddQuestPage_obj8_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::GameExplorer.Model.Video obj = sender as global::GameExplorer.Model.Video;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_YouTubeUri(obj.YouTubeUri, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "YouTubeUri":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_YouTubeUri(obj.YouTubeUri, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::GameExplorer.Model.Video obj)
                {
                    AddQuestPage_obj8_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class AddQuestPage_obj12_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IAddQuestPage_Bindings
        {
            private global::GameExplorer.Model.Image dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj12;
            private global::Windows.UI.Xaml.Controls.Image obj13;

            private AddQuestPage_obj12_BindingsTracking bindingsTracking;

            public AddQuestPage_obj12_Bindings()
            {
                this.bindingsTracking = new AddQuestPage_obj12_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 12: // Views\AddQuestPage.xaml line 108
                        this.obj12 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.RelativePanel)target);
                        break;
                    case 13: // Views\AddQuestPage.xaml line 110
                        this.obj13 = (global::Windows.UI.Xaml.Controls.Image)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj12.Target as global::Windows.UI.Xaml.Controls.RelativePanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::GameExplorer.Model.Image) item, 1 << phase);
            }

            public void Recycle()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // IAddQuestPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::GameExplorer.Model.Image)newDataRoot;
                    return true;
                }
                return false;
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::GameExplorer.Model.Image obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ImageInBytes(obj.ImageInBytes, phase);
                    }
                }
            }
            private void Update_ImageInBytes(global::System.Byte[] obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AddQuestPage.xaml line 110
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Image_Source(this.obj13, (global::Windows.UI.Xaml.Media.ImageSource)this.LookupConverter("ImageConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.ImageSource), null, null), null);
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class AddQuestPage_obj12_BindingsTracking
            {
                private global::System.WeakReference<AddQuestPage_obj12_Bindings> weakRefToBindingObj; 

                public AddQuestPage_obj12_BindingsTracking(AddQuestPage_obj12_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<AddQuestPage_obj12_Bindings>(obj);
                }

                public AddQuestPage_obj12_Bindings TryGetBindingObject()
                {
                    AddQuestPage_obj12_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AddQuestPage_obj12_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::GameExplorer.Model.Image obj = sender as global::GameExplorer.Model.Image;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ImageInBytes(obj.ImageInBytes, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "ImageInBytes":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ImageInBytes(obj.ImageInBytes, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::GameExplorer.Model.Image obj)
                {
                    AddQuestPage_obj12_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class AddQuestPage_obj23_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IAddQuestPage_Bindings
        {
            private global::GameExplorer.Model.Step dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj23;
            private global::Windows.UI.Xaml.Controls.Image obj24;
            private global::GameExplorer.Uwp.RichEditBoxExtended obj25;

            private AddQuestPage_obj23_BindingsTracking bindingsTracking;

            public AddQuestPage_obj23_Bindings()
            {
                this.bindingsTracking = new AddQuestPage_obj23_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 23: // Views\AddQuestPage.xaml line 63
                        this.obj23 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Grid)target);
                        break;
                    case 24: // Views\AddQuestPage.xaml line 70
                        this.obj24 = (global::Windows.UI.Xaml.Controls.Image)target;
                        break;
                    case 25: // Views\AddQuestPage.xaml line 71
                        this.obj25 = (global::GameExplorer.Uwp.RichEditBoxExtended)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj23.Target as global::Windows.UI.Xaml.Controls.Grid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::GameExplorer.Model.Step) item, 1 << phase);
            }

            public void Recycle()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // IAddQuestPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::GameExplorer.Model.Step)newDataRoot;
                    return true;
                }
                return false;
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::GameExplorer.Model.Step obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_Screenshot(obj.Screenshot, phase);
                        this.Update_About(obj.About, phase);
                    }
                }
            }
            private void Update_Screenshot(global::GameExplorer.Model.Image obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_Screenshot(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AddQuestPage.xaml line 70
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Image_Source(this.obj24, (global::Windows.UI.Xaml.Media.ImageSource)this.LookupConverter("ImageConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.ImageSource), null, null), null);
                    // Views\AddQuestPage.xaml line 70
                    XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj24, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("VisibillityConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                }
            }
            private void Update_About(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AddQuestPage.xaml line 71
                    XamlBindingSetters.Set_GameExplorer_Uwp_RichEditBoxExtended_RtfText(this.obj25, obj, null);
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class AddQuestPage_obj23_BindingsTracking
            {
                private global::System.WeakReference<AddQuestPage_obj23_Bindings> weakRefToBindingObj; 

                public AddQuestPage_obj23_BindingsTracking(AddQuestPage_obj23_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<AddQuestPage_obj23_Bindings>(obj);
                }

                public AddQuestPage_obj23_Bindings TryGetBindingObject()
                {
                    AddQuestPage_obj23_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                    UpdateChildListeners_Screenshot(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AddQuestPage_obj23_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::GameExplorer.Model.Step obj = sender as global::GameExplorer.Model.Step;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_Screenshot(obj.Screenshot, DATA_CHANGED);
                                bindings.Update_About(obj.About, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Screenshot":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Screenshot(obj.Screenshot, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "About":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_About(obj.About, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::GameExplorer.Model.Step obj)
                {
                    AddQuestPage_obj23_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
                public void PropertyChanged_Screenshot(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AddQuestPage_obj23_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::GameExplorer.Model.Image obj = sender as global::GameExplorer.Model.Image;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::GameExplorer.Model.Image cache_Screenshot = null;
                public void UpdateChildListeners_Screenshot(global::GameExplorer.Model.Image obj)
                {
                    if (obj != cache_Screenshot)
                    {
                        if (cache_Screenshot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_Screenshot).PropertyChanged -= PropertyChanged_Screenshot;
                            cache_Screenshot = null;
                        }
                        if (obj != null)
                        {
                            cache_Screenshot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_Screenshot;
                        }
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class AddQuestPage_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IAddQuestPage_Bindings
        {
            private global::GameExplorer.Uwp.Views.AddQuestPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj1;
            private global::Windows.UI.Xaml.Controls.ProgressRing obj2;
            private global::Windows.UI.Xaml.Controls.StackPanel obj3;
            private global::Windows.UI.Xaml.Controls.Button obj4;
            private global::Windows.UI.Xaml.Controls.HyperlinkButton obj5;
            private global::Windows.UI.Xaml.Controls.GridView obj6;
            private global::Windows.UI.Xaml.Controls.Button obj7;
            private global::Windows.UI.Xaml.Controls.GridView obj10;
            private global::Windows.UI.Xaml.Controls.Button obj11;
            private global::Windows.UI.Xaml.Controls.ListView obj14;
            private global::Windows.UI.Xaml.Controls.ComboBox obj15;
            private global::Windows.UI.Xaml.Controls.HyperlinkButton obj16;
            private global::Windows.UI.Xaml.Controls.Button obj17;
            private global::Windows.UI.Xaml.Controls.ListView obj18;
            private global::Windows.UI.Xaml.Controls.ComboBox obj19;
            private global::Windows.UI.Xaml.Controls.HyperlinkButton obj20;
            private global::Windows.UI.Xaml.Controls.Button obj21;
            private global::Windows.UI.Xaml.Controls.ListView obj22;
            private global::GameExplorer.Uwp.RichEditBoxExtended obj26;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj27;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj28;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj29;
            private global::Windows.UI.Xaml.Controls.TextBox obj30;
            private global::Windows.UI.Xaml.Controls.TextBox obj31;
            private global::Windows.UI.Xaml.Controls.TextBox obj32;
            private global::Windows.UI.Xaml.Controls.Image obj33;
            private global::Windows.UI.Xaml.Controls.Button obj34;
            private global::Windows.UI.Xaml.Controls.Image obj35;
            private global::Windows.UI.Xaml.Controls.Button obj36;

            private AddQuestPage_obj1_BindingsTracking bindingsTracking;

            public AddQuestPage_obj1_Bindings()
            {
                this.bindingsTracking = new AddQuestPage_obj1_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 1: // Views\AddQuestPage.xaml line 1
                        this.obj1 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Page)target);
                        break;
                    case 2: // Views\AddQuestPage.xaml line 22
                        this.obj2 = (global::Windows.UI.Xaml.Controls.ProgressRing)target;
                        break;
                    case 3: // Views\AddQuestPage.xaml line 145
                        this.obj3 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                        break;
                    case 4: // Views\AddQuestPage.xaml line 146
                        this.obj4 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 5: // Views\AddQuestPage.xaml line 147
                        this.obj5 = (global::Windows.UI.Xaml.Controls.HyperlinkButton)target;
                        break;
                    case 6: // Views\AddQuestPage.xaml line 125
                        this.obj6 = (global::Windows.UI.Xaml.Controls.GridView)target;
                        break;
                    case 7: // Views\AddQuestPage.xaml line 135
                        this.obj7 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 10: // Views\AddQuestPage.xaml line 105
                        this.obj10 = (global::Windows.UI.Xaml.Controls.GridView)target;
                        break;
                    case 11: // Views\AddQuestPage.xaml line 119
                        this.obj11 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 14: // Views\AddQuestPage.xaml line 99
                        this.obj14 = (global::Windows.UI.Xaml.Controls.ListView)target;
                        (this.obj14).RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.ItemsControl.ItemsSourceProperty,
                            (global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop) =>
                            {
                            if (this.initialized)
                            {
                                // Update Two Way binding
                                this.dataRoot.ViewModel.Quest.Questline.Quests = (global::System.Collections.ObjectModel.ObservableCollection<global::GameExplorer.Model.Quest>)this.obj14.ItemsSource;
                            }
                        });
                        break;
                    case 15: // Views\AddQuestPage.xaml line 95
                        this.obj15 = (global::Windows.UI.Xaml.Controls.ComboBox)target;
                        break;
                    case 16: // Views\AddQuestPage.xaml line 97
                        this.obj16 = (global::Windows.UI.Xaml.Controls.HyperlinkButton)target;
                        break;
                    case 17: // Views\AddQuestPage.xaml line 87
                        this.obj17 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 18: // Views\AddQuestPage.xaml line 88
                        this.obj18 = (global::Windows.UI.Xaml.Controls.ListView)target;
                        (this.obj18).RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.ItemsControl.ItemsSourceProperty,
                            (global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop) =>
                            {
                            if (this.initialized)
                            {
                                // Update Two Way binding
                                this.dataRoot.ViewModel.Quest.Rewards = (global::System.Collections.ObjectModel.ObservableCollection<global::GameExplorer.Model.Reward>)this.obj18.ItemsSource;
                            }
                        });
                        break;
                    case 19: // Views\AddQuestPage.xaml line 83
                        this.obj19 = (global::Windows.UI.Xaml.Controls.ComboBox)target;
                        break;
                    case 20: // Views\AddQuestPage.xaml line 85
                        this.obj20 = (global::Windows.UI.Xaml.Controls.HyperlinkButton)target;
                        break;
                    case 21: // Views\AddQuestPage.xaml line 59
                        this.obj21 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 22: // Views\AddQuestPage.xaml line 60
                        this.obj22 = (global::Windows.UI.Xaml.Controls.ListView)target;
                        (this.obj22).RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.ItemsControl.ItemsSourceProperty,
                            (global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop) =>
                            {
                            if (this.initialized)
                            {
                                // Update Two Way binding
                                this.dataRoot.ViewModel.Quest.Steps = (global::System.Collections.ObjectModel.ObservableCollection<global::GameExplorer.Model.Step>)this.obj22.ItemsSource;
                            }
                        });
                        break;
                    case 26: // Views\AddQuestPage.xaml line 52
                        this.obj26 = (global::GameExplorer.Uwp.RichEditBoxExtended)target;
                        (this.obj26).RegisterPropertyChangedCallback(global::GameExplorer.Uwp.RichEditBoxExtended.RtfTextProperty,
                            (global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop) =>
                            {
                            if (this.initialized)
                            {
                                // Update Two Way binding
                                this.dataRoot.ViewModel.Quest.About = this.obj26.RtfText;
                            }
                        });
                        break;
                    case 27: // Views\AddQuestPage.xaml line 48
                        this.obj27 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    case 28: // Views\AddQuestPage.xaml line 49
                        this.obj28 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    case 29: // Views\AddQuestPage.xaml line 50
                        this.obj29 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    case 30: // Views\AddQuestPage.xaml line 29
                        this.obj30 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        (this.obj30).LostFocus += (global::System.Object sender, global::Windows.UI.Xaml.RoutedEventArgs e) =>
                        {
                            if (this.initialized)
                            {
                                // Update Two Way binding
                                this.dataRoot.ViewModel.Quest.Title = this.obj30.Text;
                            }
                        };
                        break;
                    case 31: // Views\AddQuestPage.xaml line 30
                        this.obj31 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        (this.obj31).LostFocus += (global::System.Object sender, global::Windows.UI.Xaml.RoutedEventArgs e) =>
                        {
                            if (this.initialized)
                            {
                                // Update Two Way binding
                                this.dataRoot.ViewModel.Quest.Summary = this.obj31.Text;
                            }
                        };
                        break;
                    case 32: // Views\AddQuestPage.xaml line 31
                        this.obj32 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        break;
                    case 33: // Views\AddQuestPage.xaml line 38
                        this.obj33 = (global::Windows.UI.Xaml.Controls.Image)target;
                        break;
                    case 34: // Views\AddQuestPage.xaml line 39
                        this.obj34 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 35: // Views\AddQuestPage.xaml line 34
                        this.obj35 = (global::Windows.UI.Xaml.Controls.Image)target;
                        break;
                    case 36: // Views\AddQuestPage.xaml line 35
                        this.obj36 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    default:
                        break;
                }
            }

            // IAddQuestPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::GameExplorer.Uwp.Views.AddQuestPage)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::GameExplorer.Uwp.Views.AddQuestPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel(obj.ViewModel, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_RewardList(obj.RewardList, phase);
                    }
                }
            }
            private void Update_ViewModel(global::GameExplorer.Uwp.ViewModels.QuestViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_Enabled(obj.Enabled, phase);
                        this.Update_ViewModel_Lock(obj.Lock, phase);
                        this.Update_ViewModel_Changed(obj.Changed, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_UploadAndNavigateCommand(obj.UploadAndNavigateCommand, phase);
                        this.Update_ViewModel_ResetCommand(obj.ResetCommand, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_Quest(obj.Quest, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_UploadVideoCommand(obj.UploadVideoCommand, phase);
                        this.Update_ViewModel_UploadScreenshotsCommand(obj.UploadScreenshotsCommand, phase);
                        this.Update_ViewModel_Questlines(obj.Questlines, phase);
                        this.Update_ViewModel_CreateQuestlineCommand(obj.CreateQuestlineCommand, phase);
                        this.Update_ViewModel_AddRewardCommand(obj.AddRewardCommand, phase);
                        this.Update_ViewModel_Rewards(obj.Rewards, phase);
                        this.Update_ViewModel_CreateRewardCommand(obj.CreateRewardCommand, phase);
                        this.Update_ViewModel_AddStepCommand(obj.AddStepCommand, phase);
                        this.Update_ViewModel_BoldCommand(obj.BoldCommand, phase);
                        this.Update_ViewModel_ItalicCommand(obj.ItalicCommand, phase);
                        this.Update_ViewModel_UnderlineCommand(obj.UnderlineCommand, phase);
                        this.Update_ViewModel_UploadBannerCommand(obj.UploadBannerCommand, phase);
                        this.Update_ViewModel_UploadPhotoCommand(obj.UploadPhotoCommand, phase);
                    }
                }
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\AddQuestPage.xaml line 1
                    if ((this.obj1.Target as global::Windows.UI.Xaml.Controls.Page) != null)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_DataContext((this.obj1.Target as global::Windows.UI.Xaml.Controls.Page), obj, null);
                    }
                }
            }
            private void Update_ViewModel_Enabled(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AddQuestPage.xaml line 1
                    if ((this.obj1.Target as global::Windows.UI.Xaml.Controls.Page) != null)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled((this.obj1.Target as global::Windows.UI.Xaml.Controls.Page), obj);
                    }
                }
            }
            private void Update_ViewModel_Lock(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AddQuestPage.xaml line 22
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ProgressRing_IsActive(this.obj2, obj);
                }
            }
            private void Update_ViewModel_Changed(global::System.Boolean obj, int phase)
            {
                if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                {
                    this.Update_ViewModel_Changed_Cast_Changed_To_Visibility(obj ? global::Windows.UI.Xaml.Visibility.Visible : global::Windows.UI.Xaml.Visibility.Collapsed, phase);
                }
            }
            private void Update_ViewModel_Changed_Cast_Changed_To_Visibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AddQuestPage.xaml line 145
                    XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj3, obj);
                }
            }
            private void Update_ViewModel_UploadAndNavigateCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\AddQuestPage.xaml line 146
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj4, obj, null);
                }
            }
            private void Update_ViewModel_ResetCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\AddQuestPage.xaml line 147
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj5, obj, null);
                }
            }
            private void Update_ViewModel_Quest(global::GameExplorer.Model.Quest obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_Quest(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_Quest_Videos(obj.Videos, phase);
                        this.Update_ViewModel_Quest_Screenshots(obj.Screenshots, phase);
                        this.Update_ViewModel_Quest_Questline(obj.Questline, phase);
                        this.Update_ViewModel_Quest_Rewards(obj.Rewards, phase);
                        this.Update_ViewModel_Quest_Steps(obj.Steps, phase);
                        this.Update_ViewModel_Quest_About(obj.About, phase);
                        this.Update_ViewModel_Quest_Title(obj.Title, phase);
                        this.Update_ViewModel_Quest_Summary(obj.Summary, phase);
                        this.Update_ViewModel_Quest_Game(obj.Game, phase);
                        this.Update_ViewModel_Quest_Banner(obj.Banner, phase);
                        this.Update_ViewModel_Quest_Photo(obj.Photo, phase);
                    }
                }
            }
            private void Update_ViewModel_Quest_Videos(global::System.Collections.ObjectModel.ObservableCollection<global::GameExplorer.Model.Video> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_Quest_Videos(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AddQuestPage.xaml line 125
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj6, obj, null);
                }
            }
            private void Update_ViewModel_UploadVideoCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\AddQuestPage.xaml line 135
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj7, obj, null);
                }
            }
            private void Update_ViewModel_Quest_Screenshots(global::System.Collections.ObjectModel.ObservableCollection<global::GameExplorer.Model.Image> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_Quest_Screenshots(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AddQuestPage.xaml line 105
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj10, obj, null);
                }
            }
            private void Update_ViewModel_UploadScreenshotsCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\AddQuestPage.xaml line 119
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj11, obj, null);
                }
            }
            private void Update_ViewModel_Quest_Questline(global::GameExplorer.Model.Questline obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_Quest_Questline(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_Quest_Questline_Quests(obj.Quests, phase);
                    }
                }
            }
            private void Update_ViewModel_Quest_Questline_Quests(global::System.Collections.ObjectModel.ObservableCollection<global::GameExplorer.Model.Quest> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_Quest_Questline_Quests(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AddQuestPage.xaml line 99
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj14, obj, null);
                }
            }
            private void Update_ViewModel_Questlines(global::System.Collections.ObjectModel.ObservableCollection<global::GameExplorer.Model.Questline> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\AddQuestPage.xaml line 95
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj15, obj, null);
                }
            }
            private void Update_ViewModel_CreateQuestlineCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\AddQuestPage.xaml line 97
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj16, obj, null);
                }
            }
            private void Update_ViewModel_AddRewardCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\AddQuestPage.xaml line 87
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj17, obj, null);
                }
            }
            private void Update_RewardList(global::Windows.UI.Xaml.Controls.ComboBox obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_RewardList_SelectedItem(obj.SelectedItem, phase);
                    }
                }
            }
            private void Update_RewardList_SelectedItem(global::System.Object obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\AddQuestPage.xaml line 87
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_CommandParameter(this.obj17, obj, null);
                }
            }
            private void Update_ViewModel_Quest_Rewards(global::System.Collections.ObjectModel.ObservableCollection<global::GameExplorer.Model.Reward> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_Quest_Rewards(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AddQuestPage.xaml line 88
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj18, obj, null);
                }
            }
            private void Update_ViewModel_Rewards(global::System.Collections.ObjectModel.ObservableCollection<global::GameExplorer.Model.Reward> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\AddQuestPage.xaml line 83
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj19, obj, null);
                }
            }
            private void Update_ViewModel_CreateRewardCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\AddQuestPage.xaml line 85
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj20, obj, null);
                }
            }
            private void Update_ViewModel_AddStepCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\AddQuestPage.xaml line 59
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj21, obj, null);
                }
            }
            private void Update_ViewModel_Quest_Steps(global::System.Collections.ObjectModel.ObservableCollection<global::GameExplorer.Model.Step> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_Quest_Steps(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AddQuestPage.xaml line 60
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj22, obj, null);
                }
            }
            private void Update_ViewModel_Quest_About(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AddQuestPage.xaml line 52
                    XamlBindingSetters.Set_GameExplorer_Uwp_RichEditBoxExtended_RtfText(this.obj26, obj, null);
                }
            }
            private void Update_ViewModel_BoldCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\AddQuestPage.xaml line 48
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj27, obj, null);
                }
            }
            private void Update_ViewModel_ItalicCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\AddQuestPage.xaml line 49
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj28, obj, null);
                }
            }
            private void Update_ViewModel_UnderlineCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\AddQuestPage.xaml line 50
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj29, obj, null);
                }
            }
            private void Update_ViewModel_Quest_Title(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AddQuestPage.xaml line 29
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj30, obj, null);
                }
            }
            private void Update_ViewModel_Quest_Summary(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AddQuestPage.xaml line 30
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj31, obj, null);
                }
            }
            private void Update_ViewModel_Quest_Game(global::GameExplorer.Model.Game obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_Quest_Game(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AddQuestPage.xaml line 31
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj32, obj != null ? obj.ToString() : null, null);
                }
            }
            private void Update_ViewModel_Quest_Banner(global::GameExplorer.Model.Image obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_Quest_Banner(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AddQuestPage.xaml line 38
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Image_Source(this.obj33, (global::Windows.UI.Xaml.Media.ImageSource)this.LookupConverter("ImageConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.ImageSource), null, null), null);
                }
            }
            private void Update_ViewModel_UploadBannerCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\AddQuestPage.xaml line 39
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj34, obj, null);
                }
            }
            private void Update_ViewModel_Quest_Photo(global::GameExplorer.Model.Image obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_Quest_Photo(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AddQuestPage.xaml line 34
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Image_Source(this.obj35, (global::Windows.UI.Xaml.Media.ImageSource)this.LookupConverter("ImageConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.ImageSource), null, null), null);
                }
            }
            private void Update_ViewModel_UploadPhotoCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\AddQuestPage.xaml line 35
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj36, obj, null);
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class AddQuestPage_obj1_BindingsTracking
            {
                private global::System.WeakReference<AddQuestPage_obj1_Bindings> weakRefToBindingObj; 

                public AddQuestPage_obj1_BindingsTracking(AddQuestPage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<AddQuestPage_obj1_Bindings>(obj);
                }

                public AddQuestPage_obj1_Bindings TryGetBindingObject()
                {
                    AddQuestPage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_ViewModel(null);
                    UpdateChildListeners_ViewModel_Quest(null);
                    UpdateChildListeners_ViewModel_Quest_Videos(null);
                    UpdateChildListeners_ViewModel_Quest_Screenshots(null);
                    UpdateChildListeners_ViewModel_Quest_Questline(null);
                    UpdateChildListeners_ViewModel_Quest_Questline_Quests(null);
                    UpdateChildListeners_ViewModel_Quest_Rewards(null);
                    UpdateChildListeners_ViewModel_Quest_Steps(null);
                    UpdateChildListeners_ViewModel_Quest_Game(null);
                    UpdateChildListeners_ViewModel_Quest_Banner(null);
                    UpdateChildListeners_ViewModel_Quest_Photo(null);
                }

                public void PropertyChanged_ViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AddQuestPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::GameExplorer.Uwp.ViewModels.QuestViewModel obj = sender as global::GameExplorer.Uwp.ViewModels.QuestViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_Enabled(obj.Enabled, DATA_CHANGED);
                                bindings.Update_ViewModel_Lock(obj.Lock, DATA_CHANGED);
                                bindings.Update_ViewModel_Changed(obj.Changed, DATA_CHANGED);
                                bindings.Update_ViewModel_Quest(obj.Quest, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Enabled":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Enabled(obj.Enabled, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Lock":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Lock(obj.Lock, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Changed":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Changed(obj.Changed, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Quest":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Quest(obj.Quest, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::GameExplorer.Uwp.ViewModels.QuestViewModel cache_ViewModel = null;
                public void UpdateChildListeners_ViewModel(global::GameExplorer.Uwp.ViewModels.QuestViewModel obj)
                {
                    if (obj != cache_ViewModel)
                    {
                        if (cache_ViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel).PropertyChanged -= PropertyChanged_ViewModel;
                            cache_ViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_Quest(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AddQuestPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::GameExplorer.Model.Quest obj = sender as global::GameExplorer.Model.Quest;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_Quest_Videos(obj.Videos, DATA_CHANGED);
                                bindings.Update_ViewModel_Quest_Screenshots(obj.Screenshots, DATA_CHANGED);
                                bindings.Update_ViewModel_Quest_Questline(obj.Questline, DATA_CHANGED);
                                bindings.Update_ViewModel_Quest_Rewards(obj.Rewards, DATA_CHANGED);
                                bindings.Update_ViewModel_Quest_Steps(obj.Steps, DATA_CHANGED);
                                bindings.Update_ViewModel_Quest_About(obj.About, DATA_CHANGED);
                                bindings.Update_ViewModel_Quest_Title(obj.Title, DATA_CHANGED);
                                bindings.Update_ViewModel_Quest_Summary(obj.Summary, DATA_CHANGED);
                                bindings.Update_ViewModel_Quest_Game(obj.Game, DATA_CHANGED);
                                bindings.Update_ViewModel_Quest_Banner(obj.Banner, DATA_CHANGED);
                                bindings.Update_ViewModel_Quest_Photo(obj.Photo, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Videos":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Quest_Videos(obj.Videos, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Screenshots":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Quest_Screenshots(obj.Screenshots, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Questline":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Quest_Questline(obj.Questline, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Rewards":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Quest_Rewards(obj.Rewards, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Steps":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Quest_Steps(obj.Steps, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "About":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Quest_About(obj.About, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Title":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Quest_Title(obj.Title, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Summary":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Quest_Summary(obj.Summary, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Game":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Quest_Game(obj.Game, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Banner":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Quest_Banner(obj.Banner, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Photo":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Quest_Photo(obj.Photo, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::GameExplorer.Model.Quest cache_ViewModel_Quest = null;
                public void UpdateChildListeners_ViewModel_Quest(global::GameExplorer.Model.Quest obj)
                {
                    if (obj != cache_ViewModel_Quest)
                    {
                        if (cache_ViewModel_Quest != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_Quest).PropertyChanged -= PropertyChanged_ViewModel_Quest;
                            cache_ViewModel_Quest = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_Quest = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_Quest;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_Quest_Videos(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AddQuestPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::GameExplorer.Model.Video> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::GameExplorer.Model.Video>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_ViewModel_Quest_Videos(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    AddQuestPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::GameExplorer.Model.Video> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::GameExplorer.Model.Video>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::GameExplorer.Model.Video> cache_ViewModel_Quest_Videos = null;
                public void UpdateChildListeners_ViewModel_Quest_Videos(global::System.Collections.ObjectModel.ObservableCollection<global::GameExplorer.Model.Video> obj)
                {
                    if (obj != cache_ViewModel_Quest_Videos)
                    {
                        if (cache_ViewModel_Quest_Videos != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_Quest_Videos).PropertyChanged -= PropertyChanged_ViewModel_Quest_Videos;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_ViewModel_Quest_Videos).CollectionChanged -= CollectionChanged_ViewModel_Quest_Videos;
                            cache_ViewModel_Quest_Videos = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_Quest_Videos = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_Quest_Videos;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_ViewModel_Quest_Videos;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_Quest_Screenshots(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AddQuestPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::GameExplorer.Model.Image> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::GameExplorer.Model.Image>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_ViewModel_Quest_Screenshots(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    AddQuestPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::GameExplorer.Model.Image> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::GameExplorer.Model.Image>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::GameExplorer.Model.Image> cache_ViewModel_Quest_Screenshots = null;
                public void UpdateChildListeners_ViewModel_Quest_Screenshots(global::System.Collections.ObjectModel.ObservableCollection<global::GameExplorer.Model.Image> obj)
                {
                    if (obj != cache_ViewModel_Quest_Screenshots)
                    {
                        if (cache_ViewModel_Quest_Screenshots != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_Quest_Screenshots).PropertyChanged -= PropertyChanged_ViewModel_Quest_Screenshots;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_ViewModel_Quest_Screenshots).CollectionChanged -= CollectionChanged_ViewModel_Quest_Screenshots;
                            cache_ViewModel_Quest_Screenshots = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_Quest_Screenshots = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_Quest_Screenshots;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_ViewModel_Quest_Screenshots;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_Quest_Questline(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AddQuestPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::GameExplorer.Model.Questline obj = sender as global::GameExplorer.Model.Questline;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_Quest_Questline_Quests(obj.Quests, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Quests":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Quest_Questline_Quests(obj.Quests, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::GameExplorer.Model.Questline cache_ViewModel_Quest_Questline = null;
                public void UpdateChildListeners_ViewModel_Quest_Questline(global::GameExplorer.Model.Questline obj)
                {
                    if (obj != cache_ViewModel_Quest_Questline)
                    {
                        if (cache_ViewModel_Quest_Questline != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_Quest_Questline).PropertyChanged -= PropertyChanged_ViewModel_Quest_Questline;
                            cache_ViewModel_Quest_Questline = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_Quest_Questline = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_Quest_Questline;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_Quest_Questline_Quests(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AddQuestPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::GameExplorer.Model.Quest> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::GameExplorer.Model.Quest>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_ViewModel_Quest_Questline_Quests(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    AddQuestPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::GameExplorer.Model.Quest> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::GameExplorer.Model.Quest>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::GameExplorer.Model.Quest> cache_ViewModel_Quest_Questline_Quests = null;
                public void UpdateChildListeners_ViewModel_Quest_Questline_Quests(global::System.Collections.ObjectModel.ObservableCollection<global::GameExplorer.Model.Quest> obj)
                {
                    if (obj != cache_ViewModel_Quest_Questline_Quests)
                    {
                        if (cache_ViewModel_Quest_Questline_Quests != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_Quest_Questline_Quests).PropertyChanged -= PropertyChanged_ViewModel_Quest_Questline_Quests;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_ViewModel_Quest_Questline_Quests).CollectionChanged -= CollectionChanged_ViewModel_Quest_Questline_Quests;
                            cache_ViewModel_Quest_Questline_Quests = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_Quest_Questline_Quests = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_Quest_Questline_Quests;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_ViewModel_Quest_Questline_Quests;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_Quest_Rewards(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AddQuestPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::GameExplorer.Model.Reward> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::GameExplorer.Model.Reward>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_ViewModel_Quest_Rewards(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    AddQuestPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::GameExplorer.Model.Reward> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::GameExplorer.Model.Reward>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::GameExplorer.Model.Reward> cache_ViewModel_Quest_Rewards = null;
                public void UpdateChildListeners_ViewModel_Quest_Rewards(global::System.Collections.ObjectModel.ObservableCollection<global::GameExplorer.Model.Reward> obj)
                {
                    if (obj != cache_ViewModel_Quest_Rewards)
                    {
                        if (cache_ViewModel_Quest_Rewards != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_Quest_Rewards).PropertyChanged -= PropertyChanged_ViewModel_Quest_Rewards;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_ViewModel_Quest_Rewards).CollectionChanged -= CollectionChanged_ViewModel_Quest_Rewards;
                            cache_ViewModel_Quest_Rewards = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_Quest_Rewards = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_Quest_Rewards;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_ViewModel_Quest_Rewards;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_Quest_Steps(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AddQuestPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::GameExplorer.Model.Step> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::GameExplorer.Model.Step>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_ViewModel_Quest_Steps(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    AddQuestPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::GameExplorer.Model.Step> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::GameExplorer.Model.Step>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::GameExplorer.Model.Step> cache_ViewModel_Quest_Steps = null;
                public void UpdateChildListeners_ViewModel_Quest_Steps(global::System.Collections.ObjectModel.ObservableCollection<global::GameExplorer.Model.Step> obj)
                {
                    if (obj != cache_ViewModel_Quest_Steps)
                    {
                        if (cache_ViewModel_Quest_Steps != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_Quest_Steps).PropertyChanged -= PropertyChanged_ViewModel_Quest_Steps;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_ViewModel_Quest_Steps).CollectionChanged -= CollectionChanged_ViewModel_Quest_Steps;
                            cache_ViewModel_Quest_Steps = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_Quest_Steps = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_Quest_Steps;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_ViewModel_Quest_Steps;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_Quest_Game(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AddQuestPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::GameExplorer.Model.Game obj = sender as global::GameExplorer.Model.Game;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::GameExplorer.Model.Game cache_ViewModel_Quest_Game = null;
                public void UpdateChildListeners_ViewModel_Quest_Game(global::GameExplorer.Model.Game obj)
                {
                    if (obj != cache_ViewModel_Quest_Game)
                    {
                        if (cache_ViewModel_Quest_Game != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_Quest_Game).PropertyChanged -= PropertyChanged_ViewModel_Quest_Game;
                            cache_ViewModel_Quest_Game = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_Quest_Game = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_Quest_Game;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_Quest_Banner(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AddQuestPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::GameExplorer.Model.Image obj = sender as global::GameExplorer.Model.Image;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::GameExplorer.Model.Image cache_ViewModel_Quest_Banner = null;
                public void UpdateChildListeners_ViewModel_Quest_Banner(global::GameExplorer.Model.Image obj)
                {
                    if (obj != cache_ViewModel_Quest_Banner)
                    {
                        if (cache_ViewModel_Quest_Banner != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_Quest_Banner).PropertyChanged -= PropertyChanged_ViewModel_Quest_Banner;
                            cache_ViewModel_Quest_Banner = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_Quest_Banner = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_Quest_Banner;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_Quest_Photo(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AddQuestPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::GameExplorer.Model.Image obj = sender as global::GameExplorer.Model.Image;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::GameExplorer.Model.Image cache_ViewModel_Quest_Photo = null;
                public void UpdateChildListeners_ViewModel_Quest_Photo(global::GameExplorer.Model.Image obj)
                {
                    if (obj != cache_ViewModel_Quest_Photo)
                    {
                        if (cache_ViewModel_Quest_Photo != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_Quest_Photo).PropertyChanged -= PropertyChanged_ViewModel_Quest_Photo;
                            cache_ViewModel_Quest_Photo = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_Quest_Photo = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_Quest_Photo;
                        }
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 1: // Views\AddQuestPage.xaml line 1
                {
                    this.ViewModelRoot = (global::Windows.UI.Xaml.Controls.Page)(target);
                }
                break;
            case 19: // Views\AddQuestPage.xaml line 83
                {
                    this.RewardList = (global::Windows.UI.Xaml.Controls.ComboBox)(target);
                }
                break;
            case 26: // Views\AddQuestPage.xaml line 52
                {
                    this.AboutBox = (global::GameExplorer.Uwp.RichEditBoxExtended)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\AddQuestPage.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    AddQuestPage_obj1_Bindings bindings = new AddQuestPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    bindings.SetConverterLookupRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                }
                break;
            case 8: // Views\AddQuestPage.xaml line 128
                {                    
                    global::Windows.UI.Xaml.Controls.RelativePanel element8 = (global::Windows.UI.Xaml.Controls.RelativePanel)target;
                    AddQuestPage_obj8_Bindings bindings = new AddQuestPage_obj8_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element8.DataContext);
                    element8.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element8, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element8, bindings);
                }
                break;
            case 12: // Views\AddQuestPage.xaml line 108
                {                    
                    global::Windows.UI.Xaml.Controls.RelativePanel element12 = (global::Windows.UI.Xaml.Controls.RelativePanel)target;
                    AddQuestPage_obj12_Bindings bindings = new AddQuestPage_obj12_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element12.DataContext);
                    bindings.SetConverterLookupRoot(this);
                    element12.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element12, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element12, bindings);
                }
                break;
            case 23: // Views\AddQuestPage.xaml line 63
                {                    
                    global::Windows.UI.Xaml.Controls.Grid element23 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    AddQuestPage_obj23_Bindings bindings = new AddQuestPage_obj23_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element23.DataContext);
                    bindings.SetConverterLookupRoot(this);
                    element23.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element23, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element23, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

