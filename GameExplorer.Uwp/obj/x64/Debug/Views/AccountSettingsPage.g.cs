#pragma checksum "C:\Users\thoma\source\repos\Game Explorer\Game Explorer\GameExplorer.Uwp\Views\AccountSettingsPage.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "060E5A8B3548E49F068615F12FA5E4A7"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GameExplorer.Uwp.Views
{
    partial class AccountSettingsPage : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_FrameworkElement_DataContext(global::Windows.UI.Xaml.FrameworkElement obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.DataContext = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Control_IsEnabled(global::Windows.UI.Xaml.Controls.Control obj, global::System.Boolean value)
            {
                obj.IsEnabled = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_ProgressRing_IsActive(global::Windows.UI.Xaml.Controls.ProgressRing obj, global::System.Boolean value)
            {
                obj.IsActive = value;
            }
            public static void Set_Windows_UI_Xaml_UIElement_Visibility(global::Windows.UI.Xaml.UIElement obj, global::Windows.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(global::Windows.UI.Xaml.Controls.Primitives.ButtonBase obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.Command = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBox_Text(global::Windows.UI.Xaml.Controls.TextBox obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_ToggleSwitch_IsOn(global::Windows.UI.Xaml.Controls.ToggleSwitch obj, global::System.Boolean value)
            {
                obj.IsOn = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_DatePicker_Date(global::Windows.UI.Xaml.Controls.DatePicker obj, global::System.DateTimeOffset value)
            {
                obj.Date = value;
            }
            public static void Set_Windows_UI_Xaml_Shapes_Shape_Fill(global::Windows.UI.Xaml.Shapes.Shape obj, global::Windows.UI.Xaml.Media.Brush value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.Brush) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.Brush), targetNullValue);
                }
                obj.Fill = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Image_Source(global::Windows.UI.Xaml.Controls.Image obj, global::Windows.UI.Xaml.Media.ImageSource value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.ImageSource) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.ImageSource), targetNullValue);
                }
                obj.Source = value;
            }
            public static void Set_GameExplorer_Uwp_RichEditBoxExtended_RtfText(global::GameExplorer.Uwp.RichEditBoxExtended obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.RtfText = value ?? global::System.String.Empty;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class AccountSettingsPage_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IAccountSettingsPage_Bindings
        {
            private global::GameExplorer.Uwp.Views.AccountSettingsPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj1;
            private global::Windows.UI.Xaml.Controls.ProgressRing obj2;
            private global::Windows.UI.Xaml.Controls.StackPanel obj3;
            private global::Windows.UI.Xaml.Controls.Button obj4;
            private global::Windows.UI.Xaml.Controls.HyperlinkButton obj5;
            private global::Windows.UI.Xaml.Controls.TextBox obj6;
            private global::Windows.UI.Xaml.Controls.ToggleSwitch obj7;
            private global::Windows.UI.Xaml.Controls.TextBox obj8;
            private global::Windows.UI.Xaml.Controls.TextBox obj9;
            private global::Windows.UI.Xaml.Controls.TextBox obj10;
            private global::Windows.UI.Xaml.Controls.TextBox obj11;
            private global::Windows.UI.Xaml.Controls.DatePicker obj12;
            private global::Windows.UI.Xaml.Controls.TextBox obj13;
            private global::Windows.UI.Xaml.Shapes.Ellipse obj14;
            private global::Windows.UI.Xaml.Controls.Button obj15;
            private global::Windows.UI.Xaml.Controls.Image obj16;
            private global::Windows.UI.Xaml.Controls.Button obj17;
            private global::GameExplorer.Uwp.RichEditBoxExtended obj18;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj19;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj20;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj21;

            private AccountSettingsPage_obj1_BindingsTracking bindingsTracking;

            public AccountSettingsPage_obj1_Bindings()
            {
                this.bindingsTracking = new AccountSettingsPage_obj1_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 1: // Views\AccountSettingsPage.xaml line 1
                        this.obj1 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Page)target);
                        break;
                    case 2: // Views\AccountSettingsPage.xaml line 23
                        this.obj2 = (global::Windows.UI.Xaml.Controls.ProgressRing)target;
                        break;
                    case 3: // Views\AccountSettingsPage.xaml line 71
                        this.obj3 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                        break;
                    case 4: // Views\AccountSettingsPage.xaml line 72
                        this.obj4 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 5: // Views\AccountSettingsPage.xaml line 73
                        this.obj5 = (global::Windows.UI.Xaml.Controls.HyperlinkButton)target;
                        break;
                    case 6: // Views\AccountSettingsPage.xaml line 60
                        this.obj6 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        (this.obj6).LostFocus += (global::System.Object sender, global::Windows.UI.Xaml.RoutedEventArgs e) =>
                        {
                            if (this.initialized)
                            {
                                // Update Two Way binding
                                this.dataRoot.ViewModel.User.Email = this.obj6.Text;
                            }
                        };
                        break;
                    case 7: // Views\AccountSettingsPage.xaml line 61
                        this.obj7 = (global::Windows.UI.Xaml.Controls.ToggleSwitch)target;
                        (this.obj7).RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.ToggleSwitch.IsOnProperty,
                            (global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop) =>
                            {
                            if (this.initialized)
                            {
                                // Update Two Way binding
                                this.dataRoot.ViewModel.User.Subscribed = this.obj7.IsOn;
                            }
                        });
                        break;
                    case 8: // Views\AccountSettingsPage.xaml line 30
                        this.obj8 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        (this.obj8).LostFocus += (global::System.Object sender, global::Windows.UI.Xaml.RoutedEventArgs e) =>
                        {
                            if (this.initialized)
                            {
                                // Update Two Way binding
                                this.dataRoot.ViewModel.User.Username = this.obj8.Text;
                            }
                        };
                        break;
                    case 9: // Views\AccountSettingsPage.xaml line 31
                        this.obj9 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        (this.obj9).LostFocus += (global::System.Object sender, global::Windows.UI.Xaml.RoutedEventArgs e) =>
                        {
                            if (this.initialized)
                            {
                                // Update Two Way binding
                                this.dataRoot.ViewModel.User.FirstName = this.obj9.Text;
                            }
                        };
                        break;
                    case 10: // Views\AccountSettingsPage.xaml line 32
                        this.obj10 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        (this.obj10).LostFocus += (global::System.Object sender, global::Windows.UI.Xaml.RoutedEventArgs e) =>
                        {
                            if (this.initialized)
                            {
                                // Update Two Way binding
                                this.dataRoot.ViewModel.User.LastName = this.obj10.Text;
                            }
                        };
                        break;
                    case 11: // Views\AccountSettingsPage.xaml line 33
                        this.obj11 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        (this.obj11).LostFocus += (global::System.Object sender, global::Windows.UI.Xaml.RoutedEventArgs e) =>
                        {
                            if (this.initialized)
                            {
                                // Update Two Way binding
                                this.dataRoot.ViewModel.User.Country = this.obj11.Text;
                            }
                        };
                        break;
                    case 12: // Views\AccountSettingsPage.xaml line 34
                        this.obj12 = (global::Windows.UI.Xaml.Controls.DatePicker)target;
                        (this.obj12).RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.DatePicker.DateProperty,
                            (global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop) =>
                            {
                            if (this.initialized)
                            {
                                // Update Two Way binding
                                this.dataRoot.ViewModel.User.Birthday = (global::System.Nullable<global::System.DateTime>)this.LookupConverter("DateTimeConverter").ConvertBack(this.obj12.Date, typeof(global::System.Nullable<global::System.DateTime>), null, null);
                            }
                        });
                        break;
                    case 13: // Views\AccountSettingsPage.xaml line 35
                        this.obj13 = (global::Windows.UI.Xaml.Controls.TextBox)target;
                        (this.obj13).LostFocus += (global::System.Object sender, global::Windows.UI.Xaml.RoutedEventArgs e) =>
                        {
                            if (this.initialized)
                            {
                                // Update Two Way binding
                                this.dataRoot.ViewModel.User.Website = this.obj13.Text;
                            }
                        };
                        break;
                    case 14: // Views\AccountSettingsPage.xaml line 51
                        this.obj14 = (global::Windows.UI.Xaml.Shapes.Ellipse)target;
                        break;
                    case 15: // Views\AccountSettingsPage.xaml line 52
                        this.obj15 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 16: // Views\AccountSettingsPage.xaml line 46
                        this.obj16 = (global::Windows.UI.Xaml.Controls.Image)target;
                        break;
                    case 17: // Views\AccountSettingsPage.xaml line 47
                        this.obj17 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 18: // Views\AccountSettingsPage.xaml line 43
                        this.obj18 = (global::GameExplorer.Uwp.RichEditBoxExtended)target;
                        (this.obj18).RegisterPropertyChangedCallback(global::GameExplorer.Uwp.RichEditBoxExtended.RtfTextProperty,
                            (global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop) =>
                            {
                            if (this.initialized)
                            {
                                // Update Two Way binding
                                this.dataRoot.ViewModel.User.Bio = this.obj18.RtfText;
                            }
                        });
                        break;
                    case 19: // Views\AccountSettingsPage.xaml line 39
                        this.obj19 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    case 20: // Views\AccountSettingsPage.xaml line 40
                        this.obj20 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    case 21: // Views\AccountSettingsPage.xaml line 41
                        this.obj21 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        break;
                    default:
                        break;
                }
            }

            // IAccountSettingsPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::GameExplorer.Uwp.Views.AccountSettingsPage)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::GameExplorer.Uwp.Views.AccountSettingsPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel(obj.ViewModel, phase);
                    }
                }
            }
            private void Update_ViewModel(global::GameExplorer.Uwp.ViewModels.UserViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_Enabled(obj.Enabled, phase);
                        this.Update_ViewModel_Lock(obj.Lock, phase);
                        this.Update_ViewModel_Changed(obj.Changed, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_UploadAndNavigateCommand(obj.UploadAndNavigateCommand, phase);
                        this.Update_ViewModel_ResetCommand(obj.ResetCommand, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_User(obj.User, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_CreateNewColorCommand(obj.CreateNewColorCommand, phase);
                        this.Update_ViewModel_UploadPhotoCommand(obj.UploadPhotoCommand, phase);
                        this.Update_ViewModel_BoldCommand(obj.BoldCommand, phase);
                        this.Update_ViewModel_ItalicCommand(obj.ItalicCommand, phase);
                        this.Update_ViewModel_UnderlineCommand(obj.UnderlineCommand, phase);
                    }
                }
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\AccountSettingsPage.xaml line 1
                    if ((this.obj1.Target as global::Windows.UI.Xaml.Controls.Page) != null)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_FrameworkElement_DataContext((this.obj1.Target as global::Windows.UI.Xaml.Controls.Page), obj, null);
                    }
                }
            }
            private void Update_ViewModel_Enabled(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AccountSettingsPage.xaml line 1
                    if ((this.obj1.Target as global::Windows.UI.Xaml.Controls.Page) != null)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Control_IsEnabled((this.obj1.Target as global::Windows.UI.Xaml.Controls.Page), obj);
                    }
                }
            }
            private void Update_ViewModel_Lock(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AccountSettingsPage.xaml line 23
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ProgressRing_IsActive(this.obj2, obj);
                }
            }
            private void Update_ViewModel_Changed(global::System.Boolean obj, int phase)
            {
                if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                {
                    this.Update_ViewModel_Changed_Cast_Changed_To_Visibility(obj ? global::Windows.UI.Xaml.Visibility.Visible : global::Windows.UI.Xaml.Visibility.Collapsed, phase);
                }
            }
            private void Update_ViewModel_Changed_Cast_Changed_To_Visibility(global::Windows.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AccountSettingsPage.xaml line 71
                    XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj3, obj);
                }
            }
            private void Update_ViewModel_UploadAndNavigateCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\AccountSettingsPage.xaml line 72
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj4, obj, null);
                }
            }
            private void Update_ViewModel_ResetCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\AccountSettingsPage.xaml line 73
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj5, obj, null);
                }
            }
            private void Update_ViewModel_User(global::GameExplorer.Model.User obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_User(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_User_Email(obj.Email, phase);
                        this.Update_ViewModel_User_Subscribed(obj.Subscribed, phase);
                        this.Update_ViewModel_User_Username(obj.Username, phase);
                        this.Update_ViewModel_User_FirstName(obj.FirstName, phase);
                        this.Update_ViewModel_User_LastName(obj.LastName, phase);
                        this.Update_ViewModel_User_Country(obj.Country, phase);
                        this.Update_ViewModel_User_Birthday(obj.Birthday, phase);
                        this.Update_ViewModel_User_Website(obj.Website, phase);
                        this.Update_ViewModel_User_Color(obj.Color, phase);
                        this.Update_ViewModel_User_Photo(obj.Photo, phase);
                        this.Update_ViewModel_User_Bio(obj.Bio, phase);
                    }
                }
            }
            private void Update_ViewModel_User_Email(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AccountSettingsPage.xaml line 60
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj6, obj, null);
                }
            }
            private void Update_ViewModel_User_Subscribed(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AccountSettingsPage.xaml line 61
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ToggleSwitch_IsOn(this.obj7, obj);
                }
            }
            private void Update_ViewModel_User_Username(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AccountSettingsPage.xaml line 30
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj8, obj, null);
                }
            }
            private void Update_ViewModel_User_FirstName(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AccountSettingsPage.xaml line 31
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj9, obj, null);
                }
            }
            private void Update_ViewModel_User_LastName(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AccountSettingsPage.xaml line 32
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj10, obj, null);
                }
            }
            private void Update_ViewModel_User_Country(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AccountSettingsPage.xaml line 33
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj11, obj, null);
                }
            }
            private void Update_ViewModel_User_Birthday(global::System.Nullable<global::System.DateTime> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AccountSettingsPage.xaml line 34
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_DatePicker_Date(this.obj12, (global::System.DateTimeOffset)this.LookupConverter("DateTimeConverter").Convert(obj, typeof(global::System.DateTimeOffset), null, null));
                }
            }
            private void Update_ViewModel_User_Website(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AccountSettingsPage.xaml line 35
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBox_Text(this.obj13, obj, null);
                }
            }
            private void Update_ViewModel_User_Color(global::GameExplorer.Model.Color obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AccountSettingsPage.xaml line 51
                    XamlBindingSetters.Set_Windows_UI_Xaml_Shapes_Shape_Fill(this.obj14, (global::Windows.UI.Xaml.Media.Brush)this.LookupConverter("ColorConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.Brush), null, null), null);
                }
            }
            private void Update_ViewModel_CreateNewColorCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\AccountSettingsPage.xaml line 52
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj15, obj, null);
                }
            }
            private void Update_ViewModel_User_Photo(global::GameExplorer.Model.Image obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_User_Photo(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AccountSettingsPage.xaml line 46
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Image_Source(this.obj16, (global::Windows.UI.Xaml.Media.ImageSource)this.LookupConverter("ImageConverter").Convert(obj, typeof(global::Windows.UI.Xaml.Media.ImageSource), null, null), null);
                }
            }
            private void Update_ViewModel_UploadPhotoCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\AccountSettingsPage.xaml line 47
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj17, obj, null);
                }
            }
            private void Update_ViewModel_User_Bio(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\AccountSettingsPage.xaml line 43
                    XamlBindingSetters.Set_GameExplorer_Uwp_RichEditBoxExtended_RtfText(this.obj18, obj, null);
                }
            }
            private void Update_ViewModel_BoldCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\AccountSettingsPage.xaml line 39
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj19, obj, null);
                }
            }
            private void Update_ViewModel_ItalicCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\AccountSettingsPage.xaml line 40
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj20, obj, null);
                }
            }
            private void Update_ViewModel_UnderlineCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\AccountSettingsPage.xaml line 41
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ButtonBase_Command(this.obj21, obj, null);
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class AccountSettingsPage_obj1_BindingsTracking
            {
                private global::System.WeakReference<AccountSettingsPage_obj1_Bindings> weakRefToBindingObj; 

                public AccountSettingsPage_obj1_BindingsTracking(AccountSettingsPage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<AccountSettingsPage_obj1_Bindings>(obj);
                }

                public AccountSettingsPage_obj1_Bindings TryGetBindingObject()
                {
                    AccountSettingsPage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_ViewModel(null);
                    UpdateChildListeners_ViewModel_User(null);
                    UpdateChildListeners_ViewModel_User_Photo(null);
                }

                public void PropertyChanged_ViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AccountSettingsPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::GameExplorer.Uwp.ViewModels.UserViewModel obj = sender as global::GameExplorer.Uwp.ViewModels.UserViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_Enabled(obj.Enabled, DATA_CHANGED);
                                bindings.Update_ViewModel_Lock(obj.Lock, DATA_CHANGED);
                                bindings.Update_ViewModel_Changed(obj.Changed, DATA_CHANGED);
                                bindings.Update_ViewModel_User(obj.User, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Enabled":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Enabled(obj.Enabled, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Lock":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Lock(obj.Lock, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Changed":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Changed(obj.Changed, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "User":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_User(obj.User, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::GameExplorer.Uwp.ViewModels.UserViewModel cache_ViewModel = null;
                public void UpdateChildListeners_ViewModel(global::GameExplorer.Uwp.ViewModels.UserViewModel obj)
                {
                    if (obj != cache_ViewModel)
                    {
                        if (cache_ViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel).PropertyChanged -= PropertyChanged_ViewModel;
                            cache_ViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_User(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AccountSettingsPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::GameExplorer.Model.User obj = sender as global::GameExplorer.Model.User;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_User_Email(obj.Email, DATA_CHANGED);
                                bindings.Update_ViewModel_User_Subscribed(obj.Subscribed, DATA_CHANGED);
                                bindings.Update_ViewModel_User_Username(obj.Username, DATA_CHANGED);
                                bindings.Update_ViewModel_User_FirstName(obj.FirstName, DATA_CHANGED);
                                bindings.Update_ViewModel_User_LastName(obj.LastName, DATA_CHANGED);
                                bindings.Update_ViewModel_User_Country(obj.Country, DATA_CHANGED);
                                bindings.Update_ViewModel_User_Birthday(obj.Birthday, DATA_CHANGED);
                                bindings.Update_ViewModel_User_Website(obj.Website, DATA_CHANGED);
                                bindings.Update_ViewModel_User_Color(obj.Color, DATA_CHANGED);
                                bindings.Update_ViewModel_User_Photo(obj.Photo, DATA_CHANGED);
                                bindings.Update_ViewModel_User_Bio(obj.Bio, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Email":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_User_Email(obj.Email, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Subscribed":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_User_Subscribed(obj.Subscribed, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Username":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_User_Username(obj.Username, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "FirstName":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_User_FirstName(obj.FirstName, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "LastName":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_User_LastName(obj.LastName, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Country":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_User_Country(obj.Country, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Birthday":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_User_Birthday(obj.Birthday, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Website":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_User_Website(obj.Website, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Color":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_User_Color(obj.Color, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Photo":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_User_Photo(obj.Photo, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Bio":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_User_Bio(obj.Bio, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::GameExplorer.Model.User cache_ViewModel_User = null;
                public void UpdateChildListeners_ViewModel_User(global::GameExplorer.Model.User obj)
                {
                    if (obj != cache_ViewModel_User)
                    {
                        if (cache_ViewModel_User != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_User).PropertyChanged -= PropertyChanged_ViewModel_User;
                            cache_ViewModel_User = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_User = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_User;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_User_Photo(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    AccountSettingsPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::GameExplorer.Model.Image obj = sender as global::GameExplorer.Model.Image;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::GameExplorer.Model.Image cache_ViewModel_User_Photo = null;
                public void UpdateChildListeners_ViewModel_User_Photo(global::GameExplorer.Model.Image obj)
                {
                    if (obj != cache_ViewModel_User_Photo)
                    {
                        if (cache_ViewModel_User_Photo != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_User_Photo).PropertyChanged -= PropertyChanged_ViewModel_User_Photo;
                            cache_ViewModel_User_Photo = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_User_Photo = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_User_Photo;
                        }
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 1: // Views\AccountSettingsPage.xaml line 1
                {
                    this.ViewModelRoot = (global::Windows.UI.Xaml.Controls.Page)(target);
                }
                break;
            case 18: // Views\AccountSettingsPage.xaml line 43
                {
                    this.BioBox = (global::GameExplorer.Uwp.RichEditBoxExtended)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\AccountSettingsPage.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    AccountSettingsPage_obj1_Bindings bindings = new AccountSettingsPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    bindings.SetConverterLookupRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                }
                break;
            }
            return returnValue;
        }
    }
}

